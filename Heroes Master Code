Note: Some of this code is from the wiki page. It was used mostly as reference and a tutorial.

```
#include <sourcemod>
#include <sdktools>
#include <sdkhooks>

#define MOD_VERSION "1.0"

public Plugin:myinfo =
{
	name = "Heroes 2.0",
	author = "RadioactiveNuke and Quaaraaq",
	description = "Remake of the original Heroes by DragonLight and Redm00n",
	version = MOD_VERSION,
	url = "https://github.com/JonathanDM/Heroes-2.0"
};

public OnPluginStart()
{
	LoadTranslations("menu_test.phrases");
	PrintToServer("[Heroes] Heroes initialized.");
	RegConsoleCmd("sm_hero", Heroes_Menu);
	RegConsoleCmd("sm_help", Help_Menu);
}
/************************************************
 * Hero menu (needs work)
 ************************************************/
public MenuHandler1(Handle:heromenu, MenuAction:action, arg1, arg2)
{
	switch(action)
	{
		case MenuAction_Start:
		{
			PrintToServer("[Heroes] Menu opened.");
		}
		
		case MenuAction_Display:
		{
			decl String:buffer[255];
			Format(buffer, sizeof(buffer), %T, "test", arg1);
			
			new Handle:panel = Handle:arg2;
			SetPanelTitle(panel, buffer);
			PrintToServer("Client %d opened menu panel %x", arg1, arg2);
		}
		
		case MenuAction_Select:
		{
			decl String:info[32];
			GetMenuItem(menu, arg2, info, sizeof(info));
			PrintToServer("%d selected %s", arg1, info);
		}
		
		case MenuAction_Cancel:
		{
			PrintToServer("%d's menu was cancelled for reason %d", arg1, arg2);
		}
		
		case MenuAction_End:
		{
			CloseHandle(heromenu);
		}
		
		case MenuAction_DrawItem:
		{
			new style;
			decl String:info[32];
			GetMenuItem(heromenu, arg2, info, sizeof(info), style);
			
			return style;
		}
		
		case MenuAction_DisplayItem:
		{
			decl String:info[32];
			GetMenuItem(heromenu, arg2, info, sizeof(info));
			
			decl String:display[64];
			
			if(StrEqual(info, Credits))
			{
				Format(display, sizeof(display), "%T", "Credits", param1);
				return RedrawMenuItem(display);
			}
			//return 0;
		}
	}
}

public Action:Heroes_Menu(client, args)
{
	new Handle:heromenu = CreateMenu(MenuHandler1, MENU_ACTIONS_ALL);
	setMenuTitle(heromenu, "%T", "Heroes Menu", LANG_SERVER);
	AddMenuItem(heromenu, HeroSelect, "Select Hero");
	AddMenuItem(heromenu, OptInOrOut, "Opt in/out");
	AddMenuItem(heromenu, Credits, "Credits");
	SetMenuExitButton(heromenu, true);
	DisplayMenu(heromenu, client, 20);
	
	//return Plugin_Handled;
}

/************************************************
 * Help menu (might need work)
 ************************************************/
 
public MenuHandler1(Handle:helpmenu, MenuAction:action, arg1, arg2)
{
	switch(action)
	{
		case MenuActionStart:
		{
			PrintToServer("[Heroes] Help menu opened.");
		}
		
		case MenuActionDisplay:
		{
			decl String:buffer[255];
			Format(buffer, sizeof(buffer), "%T", "Help Menu", arg1);
			
			new Handle:panel = Handle:arg2;
			SetPanelTitle(panel, buffer);
			PrintToServer("%d opened the help menu.", arg1);
		}
		
		case MenuAction_Select:
		{
			CloseHandle(helpmenu);
		}
		
		case MenuAction_End:
		{
			CloseHandle(helpmenu);
		}
		
		case MenuAction_DrawItem:
		{
			new style;
			decl String:info[32];
			GetMenuItem(helpmenu, arg2, info, sizeof(info), style);
			
			return style;
		}
		
		case MenuAction_DisplayItem:
		{
			return 0;
		}
	}
}

public Action:Heroes_Menu(client, args)
{
	new Handle:menu = CreateMenu(MenuHandler1, MENU_ACTIONS_ALL);
	setMenuTitle(helpmenu, "%T", "Help Menu", LANG_SERVER);
	AddMenuItem(helpmenu, HelpLine1, "Each round the player with", ITEMDRAW_RAWLINE);
	AddMenuItem(helpmenu, HelpLine2, "the most queue points is selected", ITEMDRAW_RAWLINE);
	AddMenuItem(helpmenu, HelpLine3, "to be the Hero. Type \"!hero\" to", ITEMDRAW_RAWLINE);
	AddMenuItem(helpmenu, HelpLine4, "select your hero and opt in/out.", ITEMDRAW_RAWLINE);
	SetMenuExitBackButton(helpmenu, false);
}
```
